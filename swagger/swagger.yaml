basePath: /v1/
consumes:
- application/json
definitions:
  BeforeAfter:
    properties:
      after:
        description: The date the author should be born/or have died on or after (i.e.
          >= 1998-06-16)
        example: "1998-06-16"
        type: string
        x-go-name: After
      before:
        description: The date the author should be born/or have died on or before
          (i.e. <= 1998-06-16)
        example: "1998-06-16"
        type: string
        x-go-name: Before
      date:
        description: Only return authors that were born/died on the given date
        example: 16
        format: int64
        type: integer
        x-go-name: Date
      month:
        description: Only return authors that were born/died in the given month
        example: June
        type: string
        x-go-name: Month
      year:
        description: Only return authors that were born/died in the given year
        example: 1998
        format: int64
        type: integer
        x-go-name: Year
    type: object
    x-go-name: beforeAfterModel
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
  ListAuthorsOrderConfiguration:
    properties:
      maximum:
        description: |-
          Where to end the ordering (if empty it ends at the logical end, for example end at 'Z' for alphabetical ascending order).
          Note this key is always a string, for example if ordering by nrOfQuotes (or popularity) of maximum 11 quotes you need to
          set "maximum":"11" in the request body
        example: "11"
        type: string
        x-go-name: Maximum
      minimum:
        description: |-
          Where to start the ordering (if empty it starts from the beginning, for example start at 'A' for alphabetical ascending order).
          Note this key is always a string, for example if ordering by nrOfQuotes (or popularity) of minimum 10 quotes you need to
          set "minimum":"10" in the request body
        example: "10"
        type: string
        x-go-name: Minimum
      orderBy:
        description: "What to order by: \t'alphabetical', 'popularity', 'nrOfQuotes',
          'dateOfBirth', 'dateOfDeath' or 'age'"
        example: popularity
        type: string
        x-go-name: OrderBy
      reverse:
        description: Whether to order the list in reverse or not (true is Descending
          and false is Ascending, false is default)
        example: true
        type: boolean
        x-go-name: Reverse
    type: object
    x-go-name: orderConfigListAuthorsModel
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
  ListQuotesOrderConfiguration:
    properties:
      maximum:
        description: |-
          Where to end the ordering (if empty it ends at the logical end, for example end at the highest quoteid for quoteid ascending order).
          Note this key is always a string.
        example: "11"
        type: string
        x-go-name: Maximum
      minimum:
        description: |-
          Where to start the ordering (if empty it starts from beginning, for example start at 1 for quoteid ascending order).
          Note this key is always a string.
        example: "10"
        type: string
        x-go-name: Minimum
      orderBy:
        description: What to order by, 'quoteId', 'popularity' or 'length'
        example: popularity
        type: string
        x-go-name: OrderBy
      reverse:
        description: Whether to order the list in reverse or not (true is Descending
          and false is Ascending, false is default)
        example: true
        type: boolean
        x-go-name: Reverse
    type: object
    x-go-name: orderConfigListQuotesModel
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
  QodPIModel:
    properties:
      authorId:
        description: The author's id
        example: 29333
        format: int64
        type: integer
        x-go-name: AuthorId
      born:
        description: The date this author was born
        example: 1942-January-17
        type: string
        x-go-name: Born
      date:
        description: The date when this quote was the quote of the day
        example: "2021-06-12"
        type: string
        x-go-name: Date
      died:
        description: The date this author died
        example: 2016-June-3
        type: string
        x-go-name: Died
      isIcelandic:
        description: Whether or not this quote is in icelandic
        example: false
        type: boolean
        x-go-name: IsIcelandic
      name:
        description: The name of the author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      nationality:
        description: The author's nationality
        example: American
        type: string
        x-go-name: Nationality
      profession:
        description: The author's main profession
        example: Boxer
        type: string
        x-go-name: Profession
      quote:
        description: The quote for the day
        example: I hated every minute of training, but I said, 'Don't quit. Suffer
          now and live the rest of your life as a champion.'
        type: string
        x-go-name: Quote
      quoteId:
        description: The quote's id
        example: 879890
        format: int64
        type: integer
        x-go-name: QuoteId
      topicId:
        description: The topic's Id that this QOD is quote of the day of
        example: 100
        format: uint64
        type: integer
        x-go-name: TopicId
      topicName:
        description: The topic's name that this QOD is quote of the day of
        example: Wisdom
        type: string
        x-go-name: TopicName
    type: object
    x-go-name: QodAPIModel
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
  QuoteAPIModel:
    properties:
      authorId:
        description: The author's id
        example: 29333
        format: uint64
        type: integer
        x-go-name: AuthorId
      born:
        description: The date this author was born
        example: 1942-January-17
        type: string
        x-go-name: Born
      count:
        description: The popularity index of the quote
        example: 1111
        format: int64
        type: integer
        x-go-name: Count
      died:
        description: The date this author died
        example: 2016-June-3
        type: string
        x-go-name: Died
      isIcelandic:
        description: Whether or not this quote is in icelandic
        example: false
        type: boolean
        x-go-name: IsIcelandic
      name:
        description: The name of the author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      nationality:
        description: The author's nationality
        example: American
        type: string
        x-go-name: Nationality
      profession:
        description: The author's main profession
        example: Boxer
        type: string
        x-go-name: Profession
      quote:
        description: The quote
        example: I hated every minute of training, but I said, 'Don't quit. Suffer
          now and live the rest of your life as a champion.'
        type: string
        x-go-name: Quote
      quoteId:
        description: The quote's id
        example: 879890
        format: uint64
        type: integer
        x-go-name: QuoteId
    type: object
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
  Time:
    properties:
      age:
        $ref: '#/definitions/ageModel'
      born:
        $ref: '#/definitions/BeforeAfter'
      died:
        $ref: '#/definitions/BeforeAfter'
      isAlive:
        default: false
        description: If true only return authors that are known to be alive
        example: true
        type: boolean
        x-go-name: IsAlive
      isDead:
        default: false
        description: If true only return authors that are known to be dead
        example: true
        type: boolean
        x-go-name: IsDead
    type: object
    x-go-name: timeModel
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
  ageModel:
    properties:
      exactly:
        description: Only return authors that are exactly the given age
        example: 25
        format: int64
        type: integer
        x-go-name: Exactly
      olderThan:
        description: Only return authors that are older than or of equal age as the
          given age
        example: 25
        format: int64
        type: integer
        x-go-name: OlderThan
      youngerThan:
        description: Only return authors that are younger than or of equal age as
          the given age
        example: 25
        format: int64
        type: integer
        x-go-name: YoungerThan
    type: object
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
  aodModel:
    properties:
      authorId:
        description: The author's id
        example: 29333
        format: uint64
        type: integer
        x-go-name: AuthorId
      born:
        description: The date this author was born
        example: 1942-January-17
        type: string
        x-go-name: Born
      date:
        description: The date when this author was the author of the day
        example: "2021-06-12T00:00:00Z"
        type: string
        x-go-name: Date
      died:
        description: The date this author died
        example: 2016-June-3
        type: string
        x-go-name: Died
      isIcelandic:
        description: Whether the author is icelandic or not
        example: false
        type: boolean
        x-go-name: IsIcelandic
      name:
        description: The name of the author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      nationality:
        description: The author's nationality
        example: American
        type: string
        x-go-name: Nationality
      profession:
        description: The author's main profession
        example: Boxer
        type: string
        x-go-name: Profession
    type: object
    x-go-name: AodAPIModel
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
  authorModel:
    properties:
      authorId:
        description: The author's id
        example: 29333
        format: uint64
        type: integer
        x-go-name: AuthorId
      born:
        description: The date this author was born
        example: 1942-January-17
        type: string
        x-go-name: Born
      count:
        description: The popularity index of the author
        example: 1111
        format: int64
        type: integer
        x-go-name: Count
      died:
        description: The date this author died
        example: 2016-June-3
        type: string
        x-go-name: Died
      hasIcelandicQuotes:
        description: Whether or not this author has some icelandic quotes
        example: true
        type: boolean
        x-go-name: HasIcelandicQuotes
      name:
        description: The name of the author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      nationality:
        description: The author's nationality
        example: American
        type: string
        x-go-name: Nationality
      nrOfEnglishQuotes:
        description: How many quotes in English this author has
        example: 114
        format: int64
        type: integer
        x-go-name: NrOfEnglishQuotes
      nrOfIcelandicQuotes:
        description: How many quotes in Icelandic this author has
        example: 6
        format: int64
        type: integer
        x-go-name: NrOfIcelandicQuotes
      profession:
        description: The author's main profession
        example: Boxer
        type: string
        x-go-name: Profession
    type: object
    x-go-name: AuthorAPIModel
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
  topicModel:
    properties:
      id:
        format: int64
        type: integer
        x-go-name: Id
      isIcelandic:
        type: boolean
        x-go-name: IsIcelandic
      name:
        type: string
        x-go-name: Name
    type: object
    x-go-name: TopicAPIModel
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
  topicQuoteModel:
    properties:
      authorId:
        description: The author's id
        example: 24952
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: AuthorId
      born:
        description: The date this author was born
        example: 1942-January-17
        type: string
        x-go-name: Born
      count:
        format: int64
        type: integer
        x-go-name: Count
      died:
        description: The date this author died
        example: 2016-June-3
        type: string
        x-go-name: Died
      isIcelandic:
        description: Whether or not this quote is in Icelandic or not
        example: false
        type: boolean
        x-go-name: IsIcelandic
      name:
        description: Name of author
        example: Muhammad Ali
        type: string
        x-go-name: Name
      nationality:
        description: The author's nationality
        example: American
        type: string
        x-go-name: Nationality
      profession:
        description: The author's main profession
        example: Boxer
        type: string
        x-go-name: Profession
      quote:
        description: The quote
        example: Float like a butterfly, sting like a bee.
        type: string
        x-go-name: Quote
      quoteId:
        description: The quote's id
        example: 582676
        format: int64
        type: integer
        uniqueItems: true
        x-go-name: QuoteId
      topicId:
        description: The topic's Id that this QOD is quote of the day of
        example: 100
        format: uint64
        type: integer
        x-go-name: TopicId
      topicName:
        description: The topic's name that this QOD is quote of the day of
        example: Wisdom
        type: string
        x-go-name: TopicName
    type: object
    x-go-name: TopicQuoteAPIModel
    x-go-package: _/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs
host: rxvglshzhl.execute-api.eu-west-1.amazonaws.com
info:
  contact:
    email: skjaldbaka17@gmail.com
    name: Þórður Ágústsson
  description: |-
    Quotel API offers a complete feature rich REST API access to all your quotes needs. With over 1.000.000 quotes and 30.000 authors the Quotel API is one of the biggest quote-api out there.
    This is the documentation for said API. You can access this api either with an "x-api-key" header and use the base path supplied or through: https://quotel-quotes.p.rapidapi.com
    For examples of use cases for the api through rapidapi see: https://rapidapi.com/skjaldbaka17/api/quotel-quotes
  title: quotes-api.
  version: 1.0.0
paths:
  /authors:
    post:
      description: Use this route to get the authors that have the given ids.
      operationId: GetAuthors
      parameters:
      - description: The structure of the request for getting authors by their ids
        in: body
        name: Body
        required: true
        schema:
          properties:
            ids:
              description: A list of the authors's ids that you want
              example:
              - 29333
              - 19161
              items:
                format: int64
                type: integer
              type: array
              x-go-name: Ids
          required:
          - ids
          type: object
      responses:
        "200":
          $ref: '#/responses/authorsResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get authors by ids
      tags:
      - authors
  /authors/aod:
    post:
      description: Use this route to get the AOD for today for "English" or "icelandic"
        authors
      operationId: GetAuthorOfTheDay
      parameters:
      - description: The structure of the request for getting the author / quote of
          the day
        in: body
        name: Body
        schema:
          properties:
            language:
              default: English
              description: Get the author / quote of the day for the given language
                ("icelandic" or "english")
              example: English
              type: string
              x-go-name: Language
          type: object
      responses:
        "200":
          $ref: '#/responses/aodResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get the author of the day (AOD)
      tags:
      - authors
  /authors/aod/history:
    post:
      description: Use this route to get the history of authors of the day for "English"
        or "icelandic" authors -- starting from Middle of July 2021.
      operationId: GetAODHistory
      parameters:
      - description: The structure of the request for getting the history of AODs
        in: body
        name: Body
        schema:
          items:
            properties:
              language:
                default: English
                description: Get the history of the AODS for the given language ("icelandic"
                  or "english")
                example: icelandic
                type: string
                x-go-name: Language
              minimum:
                description: The earliest date to return. All authors between minimum
                  and today will be returned.
                example: "2020-12-21"
                type: string
                x-go-name: Minimum
            type: object
          type: array
      responses:
        "200":
          $ref: '#/responses/aodHistoryResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get the author of the day (AOD) history
      tags:
      - authors
  /authors/list:
    post:
      description: Use this route to get a list of authors according to some ordering
        / parameters -- for example based on age, when they where born, on popularity,
        profession or nationalities and many more
      operationId: ListAuthors
      parameters:
      - description: The structure of the request for getting a list of authors
        in: body
        name: Body
        schema:
          properties:
            language:
              description: |-
                Only return authors that have quotes in the given language ("english" or "icelandic") if left empty then no constraint
                is set on the quotes' language. Note: if also ordering by nrOfQuotes and this parameter is set then only the amount of
                quotes the author has in the given language counts towards the final ordering.
              example: English
              type: string
              x-go-name: Language
            nationalities:
              description: Only return the author's with any of the given nationalities
              example: American
              items:
                type: string
              type: array
              x-go-name: Nationalities
            orderConfig:
              $ref: '#/definitions/ListAuthorsOrderConfiguration'
            page:
              description: Response is paged. This parameter controls the page you
                are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The Response is paged. This parameter controls the number
                of Authors to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            professions:
              description: Only return the author's in any of the given professions
              example: Designer
              items:
                type: string
              type: array
              x-go-name: Professions
            time:
              $ref: '#/definitions/Time'
          type: object
      responses:
        "200":
          $ref: '#/responses/authorsResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: List authors based on parameters
      tags:
      - authors
  /authors/random:
    post:
      description: Use this route to get a random author, and some of his quotes.
      operationId: GetRandomAuthor
      parameters:
      - description: The structure of the request for getting a random author
        in: body
        name: Body
        schema:
          properties:
            language:
              description: |-
                The random author must have quotes in the given language ("english" or "icelandic") if left empty then no
                constraint on language is set
              example: English
              type: string
              x-go-name: Language
            maxQuotes:
              default: 1
              description: How many of the author's quotes, maximum, should this request
                return
              example: 10
              format: int64
              maximum: 50
              type: integer
              x-go-name: MaxQuotes
          type: object
      responses:
        "200":
          $ref: '#/responses/quotesApiResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get a random Author
      tags:
      - authors
  /languages:
    post:
      description: Use this route to get the languages supported by the api at any
        moment
      operationId: GetLanguages
      responses:
        "200":
          $ref: '#/responses/listOfStrings'
      summary: Get languages
      tags:
      - meta
  /nationalities:
    post:
      description: Use this route to get all authors' nationalities available in the
        api at any given moment
      operationId: GetNationalities
      responses:
        "200":
          $ref: '#/responses/listNationalities'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get nationalities
      tags:
      - meta
  /professions:
    post:
      description: Use this route to get all authors' professions available in the
        api at any given moment
      operationId: Getprofessions
      responses:
        "200":
          $ref: '#/responses/listProfessions'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get professions
      tags:
      - meta
  /quotes:
    post:
      description: Use this route to either get quotes straight from their ids or
        use it to get all the quotes from a particular author (by supplying the author's
        id)
      operationId: GetQuotes
      parameters:
      - description: |-
          The structure of the request to get quotes. There are two ways to use this route. 1. Send the ids of the quotes to be
          retrieved or 2. send the id of the author of the quotes you want (if you use this option the quotes are paginated)
        in: body
        name: Body
        required: true
        schema:
          properties:
            authorId:
              description: The id of the author of the quotes you want.
              example: 24952
              format: int64
              type: integer
              x-go-name: AuthorId
            ids:
              description: The list of quotes's ids you want
              example:
              - 582676
              - 443976
              items:
                format: int64
                type: integer
              type: array
              x-go-name: Ids
            page:
              description: If using authorId the response is paged. This parameter
                controls the page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: If using authorId the response is paged. This parameter
                controls the number of Authors to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
          type: object
      responses:
        "200":
          $ref: '#/responses/quotesApiResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get quotes by ids
      tags:
      - quotes
  /quotes/list:
    post:
      description: Use this route to get a list of quotes according to some ordering
        / parameters -- list them based on length of quote, popularity or by their
        id
      operationId: GetQuotesList
      parameters:
      - description: The structure of the request for getting a list of quotes
        in: body
        name: Body
        schema:
          properties:
            language:
              description: |-
                Only return quotes that have quotes in the given language ("english" or "icelandic") if left empty then no constraint
                is set on quotes' language.
              example: English
              type: string
              x-go-name: Language
            orderConfig:
              $ref: '#/definitions/ListQuotesOrderConfiguration'
            page:
              description: Response is paged. This parameter controls the page you
                are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: Response is paged. This parameter controls the number of
                Quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
          type: object
      responses:
        "200":
          $ref: '#/responses/quotesApiResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: List quotes
      tags:
      - quotes
  /quotes/qod:
    post:
      description: Use this route to get quote of the day for a language or for a
        topic -- starting from Middle of July 2021.
      operationId: GetQuoteOfTheDay
      parameters:
      - description: The structure of the request for getting the quote of the day
        in: body
        name: Body
        schema:
          properties:
            language:
              default: English
              description: Get the quote of the day for the given language ("icelandic"
                or "english")
              example: English
              type: string
              x-go-name: Language
            topicId:
              description: Get the quote of the day for the given topic by supplying
                its topicId
              example: 100
              format: int64
              type: integer
              x-go-name: TopicId
          type: object
      responses:
        "200":
          $ref: '#/responses/qodResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get the quote of the day (QOD)
      tags:
      - quotes
  /quotes/qod/history:
    post:
      description: Use this route to get the history of quotes of the day for each
        language or for each topic -- starting from Middle of July 2021.
      operationId: GetQODHistory
      parameters:
      - description: The structure of the request for getting the history of QODs
        in: body
        name: Body
        schema:
          items:
            properties:
              language:
                default: English
                description: Get the history of the QODs for the given language ("icelandic"
                  or "english")
                example: icelandic
                type: string
                x-go-name: Language
              minimum:
                description: The earliest date to return. All quotes between minimum
                  and today will be returned.
                example: "2020-12-21"
                type: string
                x-go-name: Minimum
              topicId:
                description: Get the QOD for the specified topic
                example: 1
                format: int64
                type: integer
                x-go-name: TopicId
            type: object
          type: array
      responses:
        "200":
          $ref: '#/responses/qodHistoryResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get the quote of the day (QOD) history
      tags:
      - quotes
  /quotes/random:
    post:
      description: Use this route to get a random quote from the whole database, from
        specific topics like 'Motivational' or 'Love' or from a specific author.
      operationId: GetRandomQuote
      parameters:
      - description: The structure of the request for a random quote
        in: body
        name: Body
        schema:
          properties:
            authorId:
              description: The random quote returned must be from the author with
                the given authorId
              example: 29333
              format: int64
              type: integer
              x-go-name: Authorid
            language:
              description: The random quote returned must be in the given language
              example: English
              type: string
              x-go-name: Language
            searchString:
              description: The random quote returned must contain a match with the
                searchstring
              example: float
              type: string
              x-go-name: SearchString
            topicIds:
              description: The random quote returned must be a part of one of the
                topics with id in the topicIds array
              example:
              - 10
              - 11
              items:
                format: int64
                type: integer
              type: array
              x-go-name: TopicIds
          type: object
      responses:
        "200":
          $ref: '#/responses/topicApiResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "404":
          $ref: '#/responses/notFoundResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get a random quote
      tags:
      - quotes
  /search:
    post:
      description: Use this route to search for quotes / authors by a general full
        test search that searches both in the names of the authors and the quotes
        themselves
      operationId: SearchByString
      parameters:
      - description: The structure of the request for searching quotes/authors
        in: body
        name: Body
        required: true
        schema:
          properties:
            language:
              description: The particular language that the quote should be in
              example: English
              type: string
              x-go-name: Language
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            searchString:
              description: The string to be used in the search
              example: sting like butterfly
              type: string
              x-go-name: SearchString
            topicIds:
              description: Should search in the specified topics for the searchString
              example:
              - 10
              items:
                format: int64
                type: integer
              type: array
              x-go-name: TopicIds
          required:
          - searchString
          type: object
      responses:
        "200":
          $ref: '#/responses/quotesApiResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Search general
      tags:
      - search
  /search/authors:
    post:
      description: Use this route to search for authors in the database.
      operationId: SearchAuthorsByString
      parameters:
      - description: The structure of the request for searching quotes/authors
        in: body
        name: Body
        required: true
        schema:
          properties:
            language:
              description: The particular language that the quote should be in
              example: English
              type: string
              x-go-name: Language
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            searchString:
              description: The string to be used in the search
              example: Ali Muhammad
              type: string
              x-go-name: SearchString
          required:
          - searchString
          type: object
      responses:
        "200":
          $ref: '#/responses/authorsResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Search authors
      tags:
      - search
  /search/quotes:
    post:
      description: Use this route to search for quotes by a general full test search
        that searches for words and phrases in the quotes.
      operationId: SearchQuotesByString
      parameters:
      - description: The structure of the request for searching quotes/authors
        in: body
        name: Body
        required: true
        schema:
          properties:
            language:
              description: The particular language that the quote should be in
              example: English
              type: string
              x-go-name: Language
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            searchString:
              description: The string to be used in the search
              example: sting like butterfly
              type: string
              x-go-name: SearchString
            topicIds:
              description: Should search in the specified topics for the searchString
              example:
              - 10
              items:
                format: int64
                type: integer
              type: array
              x-go-name: TopicIds
          required:
          - searchString
          type: object
      responses:
        "200":
          $ref: '#/responses/quotesApiResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Search quotes
      tags:
      - search
  /topic:
    post:
      description: Use this route to get the quotes from the particular topic. For
        example get all the quotes from topic "Smile" for a great time.
      operationId: GetTopic
      parameters:
      - description: The structure of the request for listing topics
        in: body
        name: Body
        schema:
          properties:
            id:
              description: The topic's id, if left empty then the topic name is used
              example: 10
              format: int64
              type: integer
              x-go-name: Id
            page:
              description: The page you are asking for, starts with 0.
              example: 0
              format: int64
              minimum: 0
              type: integer
              x-go-name: Page
            pageSize:
              default: 25
              description: The number of quotes to be returned on each "page"
              example: 30
              format: int64
              maximum: 200
              minimum: 1
              type: integer
              x-go-name: PageSize
            topic:
              description: Name of the topic, if left empty then the id is used
              example: Motivational
              type: string
              x-go-name: Topic
          type: object
      responses:
        "200":
          $ref: '#/responses/quotesApiResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: Get topic
      tags:
      - topics
  /topics:
    post:
      description: List all the available topics, english / icelandic or both
      operationId: GetTopics
      parameters:
      - description: The structure of the request for listing topics
        in: body
        name: Body
        schema:
          properties:
            language:
              description: The language of the topics. If left empty all topics from
                all languages are returned
              example: English
              type: string
              x-go-name: Language
          type: object
      responses:
        "200":
          $ref: '#/responses/topicsResponse'
        "400":
          $ref: '#/responses/incorrectBodyStructureResponse'
        "500":
          $ref: '#/responses/internalServerErrorResponse'
      summary: List topics
      tags:
      - topics
produces:
- application/json
responses:
  aodHistoryResponse:
    description: Data structure representing the response for the history of AODs
    schema:
      items:
        $ref: '#/definitions/aodModel'
      type: array
  aodResponse:
    description: Data structure representing the response for the author of the day
    schema:
      $ref: '#/definitions/aodModel'
  authorsResponse:
    description: Data structure representing the response for authors
    schema:
      items:
        $ref: '#/definitions/authorModel'
      type: array
  incorrectBodyStructureResponse:
    description: Data structure representing the error response to a wrongly structured
      request body
    schema:
      properties:
        message:
          description: The error message
          example: request body is not structured correctly.
          type: string
          x-go-name: Message
        statusCode:
          description: The http status code for this error
          example: 400
          format: int64
          type: integer
          x-go-name: StatusCode
      type: object
  internalServerErrorResponse:
    description: Data structure representing the error response to internal server
      errors
    schema:
      properties:
        message:
          description: The error message describing what happened
          example: Please try again later.
          type: string
          x-go-name: Message
        statusCode:
          description: The http status code for this error
          example: 500
          format: int64
          type: integer
          x-go-name: StatusCode
      type: object
  listNationalities:
    description: Data structure for the nationalities in the database
    schema:
      items:
        properties:
          nationalities:
            description: The nationalities supported
            example:
            - American
            - Italian
            items:
              type: string
            type: array
            x-go-name: Nationalities
        type: object
      type: array
  listOfStrings:
    description: Data structure for supported languages information
    schema:
      items:
        properties:
          languages:
            description: The languages supported
            example:
            - English
            - Icelandic
            items:
              type: string
            type: array
            x-go-name: Languages
        type: object
      type: array
  listProfessions:
    description: Data structure for the professions in the database
    schema:
      items:
        properties:
          professions:
            description: The professions supported
            example:
            - Rapper
            - Politician
            items:
              type: string
            type: array
            x-go-name: Professions
        type: object
      type: array
  notFoundResponse:
    description: Data structure representing the error response to a not found error
    schema:
      properties:
        message:
          description: The error message
          example: No quote exists that matches the given parameters.
          type: string
          x-go-name: Message
      type: object
  qodHistoryResponse:
    description: Data structure representing the response for the history of QODS
    schema:
      items:
        $ref: '#/definitions/QodPIModel'
      type: array
  qodResponse:
    description: Data structure representing the response for the QOD
    schema:
      $ref: '#/definitions/QodPIModel'
  quotesApiResponse:
    description: Data structure representing the response for quotes
    schema:
      items:
        $ref: '#/definitions/QuoteAPIModel'
      type: array
  topicApiResponse:
    description: Data structure representing the response for a quote based on a particular
      topic
    schema:
      $ref: '#/definitions/topicQuoteModel'
  topicsResponse:
    description: Data structure representing a list response for topics
    schema:
      items:
        $ref: '#/definitions/topicModel'
      type: array
schemes:
- https
swagger: "2.0"
tags:
- description: We built the /search route with full text phrase search in mind. Giving
    you the possibility of findind that one quote or author that you are looking for
    fast and easy -- if searching for single words that will take a loooooong time
    but short phrases or at least 2 nouns is lightning fast.
  name: search
- description: With over 1.000.000 quote the /quotes route is the heart and soul of
    this api. This resource offers many products like quote of the day, which is ordered
    into topics and languages, random quote and lists.
  name: quotes
- description: Ok, I lied. /authors is just as much the heart and soul of this api
    as /quotes. This api gives you access to over 30.000 authors and offers many products
    like author of the day, random author and list authors based on multiple parameters
    like 'age' and 'profession'.
  name: authors
- description: With over 100 topics the /topics route gives you direct access to the
    quotes important enough to be a part of a distinguished topic like 'Love'.
  name: topics
