{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Quotel API offers a complete feature rich REST API access to all your quotes needs. This is the documentation of our quotes API.",
    "title": "quotes-api.",
    "contact": {
      "name": "Þórður Ágústsson",
      "email": "skjaldbaka17@gmail.com"
    },
    "version": "1.0.0"
  },
  "host": "rxvglshzhl.execute-api.eu-west-1.amazonaws.com",
  "basePath": "/v1/",
  "paths": {
    "/authors": {
      "post": {
        "description": "Get the authors by their ids",
        "tags": [
          "AUTHORS"
        ],
        "operationId": "GetAuthors",
        "parameters": [
          {
            "description": "The structure of the request for getting authors by their ids",
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "ids"
              ],
              "properties": {
                "ids": {
                  "description": "A list of the authors's ids that you want",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "x-go-name": "Ids",
                  "example": [
                    24952,
                    19161
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/authorsResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/authors/aod": {
      "post": {
        "description": "Gets the author of the day",
        "tags": [
          "AUTHORS"
        ],
        "operationId": "GetAuthorOfTheDay",
        "parameters": [
          {
            "description": "The structure of the request for getting the author / quote of the day",
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "language": {
                  "description": "Get the author / quote of the day for the given language (\"icelandic\" or \"english\")",
                  "type": "string",
                  "default": "English",
                  "x-go-name": "Language",
                  "example": "English"
                },
                "topicId": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "TopicId"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/aodResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/authors/aod/history": {
      "post": {
        "description": "Use this route to get the history of authors of the day for \"English\" or \"icelandic\" authors -- starting from Middle of July 2021.",
        "tags": [
          "authors"
        ],
        "summary": "Gets the author of the day (AOD) history.",
        "operationId": "getAODHistory",
        "responses": {
          "200": {
            "$ref": "#/responses/aodHistoryResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/authors/list": {
      "post": {
        "description": "Get a list of authors according to some ordering / parameters",
        "tags": [
          "AUTHORS"
        ],
        "operationId": "ListAuthors",
        "parameters": [
          {
            "description": "The structure of the request for getting a list of authors",
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "language": {
                  "description": "Only return authors that have quotes in the given language (\"english\" or \"icelandic\") if left empty then no constraint\nis set on the quotes' language. Note if ordering by nrOfQuotes if this parameter is set then only the amount of\nquotes the author has in the given language counts towards the final ordering.",
                  "type": "string",
                  "x-go-name": "Language",
                  "example": "English"
                },
                "nationalities": {
                  "description": "Only return the author's with any of the given nationalities",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "Nationalities",
                  "example": "American"
                },
                "orderConfig": {
                  "$ref": "#/definitions/OrderConfiguration"
                },
                "page": {
                  "description": "Response is paged. This parameter controls the page you are asking for, starts with 0.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "x-go-name": "Page",
                  "example": 0
                },
                "pageSize": {
                  "description": "Response is paged. This parameter controls the number of Authors to be returned on each \"page\"",
                  "type": "integer",
                  "format": "int64",
                  "default": 25,
                  "maximum": 200,
                  "minimum": 1,
                  "x-go-name": "PageSize",
                  "example": 30
                },
                "professions": {
                  "description": "Only return the author's in any of the given professions",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-go-name": "Professions",
                  "example": "Designer"
                },
                "time": {
                  "$ref": "#/definitions/Time"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/authorsResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/authors/random": {
      "post": {
        "description": "Get a random Author, and some of his quotes, according to the given parameters",
        "tags": [
          "AUTHORS"
        ],
        "operationId": "GetRandomAuthor",
        "parameters": [
          {
            "description": "The structure of the request for getting a random author",
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "language": {
                  "description": "The random author must have quotes in the given language (\"english\" or \"icelandic\") if left empty then no\nconstraint on language is set",
                  "type": "string",
                  "x-go-name": "Language",
                  "example": "English"
                },
                "maxQuotes": {
                  "description": "How many quotes, maximum, to be returned from this author",
                  "type": "integer",
                  "format": "int64",
                  "default": 1,
                  "maximum": 50,
                  "x-go-name": "MaxQuotes",
                  "example": 10
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/quotesApiResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/languages": {
      "get": {
        "description": "Get languages supported by the api",
        "tags": [
          "META"
        ],
        "operationId": "GetLanguages",
        "responses": {
          "200": {
            "$ref": "#/responses/listOfStrings"
          }
        }
      }
    },
    "/quotes": {
      "post": {
        "description": "Get quotes by their ids",
        "tags": [
          "QUOTES"
        ],
        "operationId": "GetQuotes",
        "parameters": [
          {
            "description": "The structure of the request to get quotes. There are two ways to use this route. 1. Send the ids of the quotes to be\nretrieved or 2. send the id of the author of the quotes you want (if you use this option the quotes are paginated)",
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "authorId": {
                  "description": "The id of the author of the quotes you want.",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "AuthorId",
                  "example": 24952
                },
                "ids": {
                  "description": "The list of quotes's ids you want",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "x-go-name": "Ids",
                  "example": [
                    582676,
                    443976
                  ]
                },
                "page": {
                  "description": "If using authorId the response is paged. This parameter controls the page you are asking for, starts with 0.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "x-go-name": "Page",
                  "example": 0
                },
                "pageSize": {
                  "description": "If using authorId the response is paged. This parameter controls the number of Authors to be returned on each \"page\"",
                  "type": "integer",
                  "format": "int64",
                  "default": 25,
                  "maximum": 200,
                  "minimum": 1,
                  "x-go-name": "PageSize",
                  "example": 30
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/quotesApiResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/quotes/list": {
      "post": {
        "description": "Get list of quotes according to some ordering / parameters",
        "tags": [
          "QUOTES"
        ],
        "operationId": "GetQuotesList",
        "parameters": [
          {
            "description": "The structure of the request for getting a list of quotes",
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "language": {
                  "description": "Only return quotes that have quotes in the given language (\"english\" or \"icelandic\") if left empty then no constraint\nis set on the quotes' language.",
                  "type": "string",
                  "x-go-name": "Language",
                  "example": "English"
                },
                "orderConfig": {
                  "$ref": "#/definitions/OrderConfiguration"
                },
                "page": {
                  "description": "Response is paged. This parameter controls the page you are asking for, starts with 0.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "x-go-name": "Page",
                  "example": 0
                },
                "pageSize": {
                  "description": "Response is paged. This parameter controls the number of Quotes to be returned on each \"page\"",
                  "type": "integer",
                  "format": "int64",
                  "default": 25,
                  "maximum": 200,
                  "minimum": 1,
                  "x-go-name": "PageSize",
                  "example": 30
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/quotesApiResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/quotes/qod": {
      "post": {
        "description": "gets the quote of the day",
        "tags": [
          "QUOTES"
        ],
        "operationId": "GetQuoteOfTheDay",
        "parameters": [
          {
            "description": "The structure of the request for getting the author / quote of the day",
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "language": {
                  "description": "Get the author / quote of the day for the given language (\"icelandic\" or \"english\")",
                  "type": "string",
                  "default": "English",
                  "x-go-name": "Language",
                  "example": "English"
                },
                "topicId": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "TopicId"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/qodResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/quotes/qod/history": {
      "post": {
        "description": "Gets the history for the quotes of the day",
        "tags": [
          "QUOTES"
        ],
        "operationId": "GetQODHistory",
        "parameters": [
          {
            "description": "The structure of the request for getting the history of AODs / QODs",
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "language": {
                    "description": "Get the history of the AODS / QODs for the given language (\"icelandic\" or \"english\")",
                    "type": "string",
                    "default": "English",
                    "x-go-name": "Language",
                    "example": "icelandic"
                  },
                  "minimum": {
                    "description": "The earliest date to return. All authors / quotes between minimum and today will be returned.",
                    "type": "string",
                    "x-go-name": "Minimum",
                    "example": "2020-12-21"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/qodHistoryResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/quotes/random": {
      "post": {
        "description": "Get a random quote according to the given parameters",
        "tags": [
          "QUOTES"
        ],
        "operationId": "GetRandomQuote",
        "parameters": [
          {
            "description": "The structure of the request for a random quote",
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "authorId": {
                  "description": "The random quote returned must be from the author with the given authorId",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "Authorid",
                  "example": 24952
                },
                "language": {
                  "description": "The random quote returned must be in the given language",
                  "type": "string",
                  "x-go-name": "Language",
                  "example": "English"
                },
                "searchString": {
                  "description": "The random quote returned must contain a match with the searchstring",
                  "type": "string",
                  "x-go-name": "SearchString",
                  "example": "float"
                },
                "topicIds": {
                  "description": "The random quote returned must be a part of one of the topics with id in the topicIds array",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "x-go-name": "TopicIds",
                  "example": [
                    10,
                    11
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/topicViewResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "404": {
            "$ref": "#/responses/notFoundResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/search": {
      "post": {
        "description": "Search for quotes / authors by a general string-search that searches both in the names of the authors and the quotes themselves",
        "tags": [
          "SEARCH"
        ],
        "operationId": "SearchByString",
        "parameters": [
          {
            "description": "The structure of the request for searching quotes/authors",
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "searchString"
              ],
              "properties": {
                "language": {
                  "description": "The particular language that the quote should be in",
                  "type": "string",
                  "x-go-name": "Language",
                  "example": "English"
                },
                "page": {
                  "description": "The page you are asking for, starts with 0.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "x-go-name": "Page",
                  "example": 0
                },
                "pageSize": {
                  "description": "The number of quotes to be returned on each \"page\"",
                  "type": "integer",
                  "format": "int64",
                  "default": 25,
                  "maximum": 200,
                  "minimum": 1,
                  "x-go-name": "PageSize",
                  "example": 30
                },
                "searchString": {
                  "description": "The string to be used in the search",
                  "type": "string",
                  "x-go-name": "SearchString",
                  "example": "sting like butterfly"
                },
                "topicIds": {
                  "description": "Should search in the specified topics for the searchString",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "TopicIds",
                  "example": 10
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/topicViewsResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/search/authors": {
      "post": {
        "description": "Authors search. Searching authors by a given search string",
        "tags": [
          "SEARCH"
        ],
        "operationId": "SearchAuthorsByString",
        "parameters": [
          {
            "description": "The structure of the request for searching quotes/authors",
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "searchString"
              ],
              "properties": {
                "language": {
                  "description": "The particular language that the quote should be in",
                  "type": "string",
                  "x-go-name": "Language",
                  "example": "English"
                },
                "page": {
                  "description": "The page you are asking for, starts with 0.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "x-go-name": "Page",
                  "example": 0
                },
                "pageSize": {
                  "description": "The number of quotes to be returned on each \"page\"",
                  "type": "integer",
                  "format": "int64",
                  "default": 25,
                  "maximum": 200,
                  "minimum": 1,
                  "x-go-name": "PageSize",
                  "example": 30
                },
                "searchString": {
                  "description": "The string to be used in the search",
                  "type": "string",
                  "x-go-name": "SearchString",
                  "example": "Ali Muhammad"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/authorsResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/search/quotes": {
      "post": {
        "description": "Quotes search. Searching quotes by a given search string",
        "tags": [
          "SEARCH"
        ],
        "operationId": "SearchQuotesByString",
        "parameters": [
          {
            "description": "The structure of the request for searching quotes/authors",
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "searchString"
              ],
              "properties": {
                "language": {
                  "description": "The particular language that the quote should be in",
                  "type": "string",
                  "x-go-name": "Language",
                  "example": "English"
                },
                "page": {
                  "description": "The page you are asking for, starts with 0.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "x-go-name": "Page",
                  "example": 0
                },
                "pageSize": {
                  "description": "The number of quotes to be returned on each \"page\"",
                  "type": "integer",
                  "format": "int64",
                  "default": 25,
                  "maximum": 200,
                  "minimum": 1,
                  "x-go-name": "PageSize",
                  "example": 30
                },
                "searchString": {
                  "description": "The string to be used in the search",
                  "type": "string",
                  "x-go-name": "SearchString",
                  "example": "sting like butterfly"
                },
                "topicIds": {
                  "description": "Should search in the specified topics for the searchString",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "TopicIds",
                  "example": 10
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/topicViewsResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/topic": {
      "post": {
        "description": "Get quotes from a particular topic",
        "tags": [
          "TOPICS"
        ],
        "operationId": "GetTopic",
        "parameters": [
          {
            "description": "The structure of the request for listing topics",
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The topic's id, if left empty then the topic name is used",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "Id",
                  "example": 10
                },
                "page": {
                  "description": "The page you are asking for, starts with 0.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "x-go-name": "Page",
                  "example": 0
                },
                "pageSize": {
                  "description": "The number of quotes to be returned on each \"page\"",
                  "type": "integer",
                  "format": "int64",
                  "default": 25,
                  "maximum": 200,
                  "minimum": 1,
                  "x-go-name": "PageSize",
                  "example": 30
                },
                "topic": {
                  "description": "Name of the topic, if left empty then the id is used",
                  "type": "string",
                  "x-go-name": "Topic",
                  "example": "Motivational"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/topicViewsResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    },
    "/topics": {
      "post": {
        "description": "List the available topics, english / icelandic or both",
        "tags": [
          "TOPICS"
        ],
        "operationId": "GetTopics",
        "parameters": [
          {
            "description": "The structure of the request for listing topics",
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "language": {
                  "description": "The language of the topics. If left empty all topics from all languages are returned",
                  "type": "string",
                  "x-go-name": "Language",
                  "example": "English"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/topicsResponse"
          },
          "400": {
            "$ref": "#/responses/incorrectBodyStructureResponse"
          },
          "500": {
            "$ref": "#/responses/internalServerErrorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "AodAPIModel": {
      "type": "object",
      "properties": {
        "authorId": {
          "description": "The author's id",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "AuthorId",
          "example": 29333
        },
        "birthDate": {
          "description": "The date this author was born",
          "type": "string",
          "x-go-name": "BirthDate",
          "example": "1942-January-17"
        },
        "date": {
          "description": "The date when this author was the author of the day",
          "type": "string",
          "x-go-name": "Date",
          "example": "2021-06-12T00:00:00Z"
        },
        "deathDate": {
          "description": "The date this author died",
          "type": "string",
          "x-go-name": "DeathDate",
          "example": "2016-June-3"
        },
        "isIcelandic": {
          "description": "Whether the author is icelandic or not",
          "type": "boolean",
          "x-go-name": "IsIcelandic",
          "example": false
        },
        "name": {
          "description": "The name of the author",
          "type": "string",
          "x-go-name": "Name",
          "example": "Muhammad Ali"
        },
        "nationality": {
          "description": "The author's nationality",
          "type": "string",
          "x-go-name": "Nationality",
          "example": "American"
        },
        "profession": {
          "description": "The author's main profession",
          "type": "string",
          "x-go-name": "Profession",
          "example": "Boxer"
        }
      },
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "AuthorAPIModel": {
      "type": "object",
      "properties": {
        "count": {
          "description": "The popularity index of the author",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Count",
          "example": 1111
        },
        "hasIcelandicQuotes": {
          "description": "Whether or not this author has some icelandic quotes",
          "type": "boolean",
          "x-go-name": "HasIcelandicQuotes",
          "example": true
        },
        "id": {
          "description": "The author's id",
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "x-go-name": "Id",
          "example": 24952
        },
        "name": {
          "description": "Name of the author",
          "type": "string",
          "x-go-name": "Name",
          "example": "Muhammad Ali"
        },
        "nrOfEnglishQuotes": {
          "description": "How many quotes in English this author has",
          "type": "integer",
          "format": "int64",
          "x-go-name": "NrOfEnglishQuotes",
          "example": 78
        },
        "nrOfIcelandicQuotes": {
          "description": "How many quotes in Icelandic this author has",
          "type": "integer",
          "format": "int64",
          "x-go-name": "NrOfIcelandicQuotes",
          "example": 6
        }
      },
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "BeforeAfter": {
      "type": "object",
      "properties": {
        "after": {
          "description": "The date the author should be born/or have died on or after (i.e. \u003e= 1998-06-16)",
          "type": "string",
          "x-go-name": "After",
          "example": "1998-06-16"
        },
        "before": {
          "description": "The date the author should be born/or have died on or before (i.e. \u003c= 1998-06-16)",
          "type": "string",
          "x-go-name": "Before",
          "example": "1998-06-16"
        },
        "date": {
          "description": "Only return authors that were born/died on the given date",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Date",
          "example": 16
        },
        "month": {
          "description": "Only return authors that were born/died in the given month",
          "type": "string",
          "x-go-name": "Month",
          "example": "June"
        },
        "year": {
          "description": "Only return authors that were born/died in the given year",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Year",
          "example": 1998
        }
      },
      "x-go-name": "beforeAfterModel",
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "OfTheDayModel": {
      "type": "object",
      "properties": {
        "date": {
          "description": "The date when this author / quote should be 'of the day'",
          "type": "string",
          "x-go-name": "Date",
          "example": "2020-06-12"
        },
        "id": {
          "description": "The id of the author / quote",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id",
          "example": 1
        },
        "language": {
          "description": "The language of this author / quote",
          "type": "string",
          "default": "English",
          "x-go-name": "Language",
          "example": "icelandic"
        }
      },
      "x-go-name": "ofTheDayModel",
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "OrderConfiguration": {
      "type": "object",
      "properties": {
        "maximum": {
          "description": "Where to end the ordering (if empty it ends at the logical end, for example end at 'Z' for alphabetical ascending order).\nNote this key is always a string, for example if ordering by nrOfQuotes (or popularity) of maximum 11 quotes you need to\nset \"maximum\":\"11\" in the request body",
          "type": "string",
          "x-go-name": "Maximum",
          "example": "11"
        },
        "minimum": {
          "description": "Where to start the ordering (if empty it starts from beginning, for example start at 'A' for alphabetical ascending order).\nNote this key is always a string, for example if ordering by nrOfQuotes (or popularity) of minimum 10 quotes you need to\nset \"minimum\":\"10\" in the request body",
          "type": "string",
          "x-go-name": "Minimum",
          "example": "10"
        },
        "orderBy": {
          "description": "What to order by, 'alphabetical', 'popularity','nrOfQuotes','dateOfBirth', 'dateOfDeath' or 'age'",
          "type": "string",
          "x-go-name": "OrderBy",
          "example": "popularity"
        },
        "reverse": {
          "description": "Whether to order the list in reverse or not (true is Descending and false is Ascending, false is default)",
          "type": "boolean",
          "x-go-name": "Reverse",
          "example": true
        }
      },
      "x-go-name": "orderConfigListAuthorsModel",
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "QodViewAPIModel": {
      "type": "object",
      "properties": {
        "authorId": {
          "description": "The author's id",
          "type": "integer",
          "format": "int64",
          "x-go-name": "AuthorId"
        },
        "date": {
          "description": "The date when this quote was the quote of the day",
          "type": "string",
          "x-go-name": "Date",
          "example": "2021-06-12T00:00:00Z"
        },
        "isIcelandic": {
          "description": "Whether the quote is in icelandic\nfalse",
          "type": "boolean",
          "x-go-name": "IsIcelandic"
        },
        "name": {
          "description": "Name of the author",
          "type": "string",
          "x-go-name": "Name",
          "example": "Muhammad Ali"
        },
        "quote": {
          "description": "The quote for the day",
          "type": "string",
          "x-go-name": "Quote",
          "example": "Float like a butterfly, sting like a bee"
        },
        "quoteId": {
          "description": "The quote's id",
          "type": "integer",
          "format": "int64",
          "x-go-name": "QuoteId",
          "example": 582676
        }
      },
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "SearchViewAPIModel": {
      "type": "object",
      "properties": {
        "authorId": {
          "description": "The author's id",
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "x-go-name": "AuthorId",
          "example": 24952
        },
        "isIcelandic": {
          "description": "Whether or not this quote is in Icelandic or not",
          "type": "boolean",
          "x-go-name": "IsIcelandic",
          "example": false
        },
        "name": {
          "description": "Name of author",
          "type": "string",
          "x-go-name": "Name",
          "example": "Muhammad Ali"
        },
        "quote": {
          "description": "The quote",
          "type": "string",
          "x-go-name": "Quote",
          "example": "Float like a butterfly, sting like a bee."
        },
        "quoteId": {
          "description": "The quote's id",
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "x-go-name": "QuoteId",
          "example": 582676
        }
      },
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "Time": {
      "type": "object",
      "properties": {
        "age": {
          "$ref": "#/definitions/ageModel"
        },
        "born": {
          "$ref": "#/definitions/BeforeAfter"
        },
        "died": {
          "$ref": "#/definitions/BeforeAfter"
        },
        "isAlive": {
          "description": "If true only return authors that are alive",
          "type": "boolean",
          "default": false,
          "x-go-name": "IsAlive",
          "example": true
        },
        "isDead": {
          "description": "If true only return authors that are dead",
          "type": "boolean",
          "default": false,
          "x-go-name": "IsDead",
          "example": true
        }
      },
      "x-go-name": "timeModel",
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "TopicAPIModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "isIcelandic": {
          "type": "boolean",
          "x-go-name": "IsIcelandic"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "TopicViewAPIModel": {
      "type": "object",
      "properties": {
        "authorId": {
          "description": "The author's id",
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "x-go-name": "AuthorId",
          "example": 24952
        },
        "isIcelandic": {
          "description": "Whether or not this quote is in Icelandic or not",
          "type": "boolean",
          "x-go-name": "IsIcelandic",
          "example": false
        },
        "name": {
          "description": "Name of author",
          "type": "string",
          "x-go-name": "Name",
          "example": "Muhammad Ali"
        },
        "quote": {
          "description": "The quote",
          "type": "string",
          "x-go-name": "Quote",
          "example": "Float like a butterfly, sting like a bee."
        },
        "quoteId": {
          "description": "The quote's id",
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "x-go-name": "QuoteId",
          "example": 582676
        },
        "topicId": {
          "description": "The topic's id (if topic id / name not supplied this will return a zero id)",
          "type": "integer",
          "format": "int64",
          "x-go-name": "TopicId",
          "example": 10
        },
        "topicName": {
          "description": "The topic's name (if topic id / name not supplied this will return empty string \"\")",
          "type": "string",
          "x-go-name": "TopicName",
          "example": "inspirational"
        }
      },
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "ageModel": {
      "type": "object",
      "properties": {
        "exactly": {
          "description": "Only return authors that are exactly the given age",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Exactly",
          "example": 25
        },
        "olderThan": {
          "description": "Only return authors that are older than or of equal age as the given age",
          "type": "integer",
          "format": "int64",
          "x-go-name": "OlderThan",
          "example": 25
        },
        "youngerThan": {
          "description": "Only return authors that are younger than or of equal age as the given age",
          "type": "integer",
          "format": "int64",
          "x-go-name": "YoungerThan",
          "example": 25
        }
      },
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "qodResponseModel": {
      "type": "object",
      "properties": {
        "authorid": {
          "description": "The author's id",
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "x-go-name": "Authorid",
          "example": 24952
        },
        "date": {
          "description": "The date when this author was the author of the day",
          "type": "string",
          "x-go-name": "Date",
          "example": "2021-06-12T00:00:00Z"
        },
        "isicelandic": {
          "description": "Whether the quote is in icelandic",
          "type": "boolean",
          "x-go-name": "Isicelandic",
          "example": false
        },
        "name": {
          "description": "Name of the author",
          "type": "string",
          "x-go-name": "Name",
          "example": "Muhammad Ali"
        },
        "quote": {
          "description": "The quote for the day",
          "type": "string",
          "x-go-name": "Quote",
          "example": "Float like a butterfly, sting like a bee"
        },
        "quoteid": {
          "description": "The quote's id",
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "x-go-name": "Quoteid",
          "example": 582676
        }
      },
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    },
    "quotesResponse": {
      "type": "object",
      "properties": {
        "authorid": {
          "description": "The author's id",
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "x-go-name": "Authorid",
          "example": 24952
        },
        "isicelandic": {
          "description": "Whether or not this quote is in Icelandic or not",
          "type": "boolean",
          "x-go-name": "Isicelandic",
          "example": false
        },
        "name": {
          "description": "Name of author",
          "type": "string",
          "x-go-name": "Name",
          "example": "Muhammad Ali"
        },
        "quote": {
          "description": "The quote",
          "type": "string",
          "x-go-name": "Quote",
          "example": "Float like a butterfly, sting like a bee."
        },
        "quoteid": {
          "description": "The quote's id",
          "type": "integer",
          "format": "int64",
          "uniqueItems": true,
          "x-go-name": "Quoteid",
          "example": 582676
        }
      },
      "x-go-name": "baseQuotesResponseModel",
      "x-go-package": "_/Users/thorduragustsson/Programming/go/github.com/Skjaldbaka17/quotel-sls-api/swagger/docs"
    }
  },
  "responses": {
    "aodHistoryResponse": {
      "description": "Data structure representing the response for the history of AODs",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/AodAPIModel"
        }
      }
    },
    "aodResponse": {
      "description": "Data structure representing the response for the author of the day",
      "schema": {
        "$ref": "#/definitions/AodAPIModel"
      }
    },
    "authorsResponse": {
      "description": "Data structure representing the response for authors",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/AuthorAPIModel"
        }
      }
    },
    "incorrectBodyStructureResponse": {
      "description": "Data structure representing the error response to a wrongly structured request body",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "description": "The error message",
            "type": "string",
            "x-go-name": "Message",
            "example": "request body is not structured correctly."
          },
          "statusCode": {
            "description": "The http status code for this error",
            "type": "integer",
            "format": "int64",
            "x-go-name": "StatusCode",
            "example": 400
          }
        }
      }
    },
    "incorrectCredentialsResponse": {
      "description": "Data structure representing the error response to an incorrect Credentials error",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "description": "The error message",
            "type": "string",
            "x-go-name": "Message",
            "example": "Valar Dohaeris"
          }
        }
      }
    },
    "internalServerErrorResponse": {
      "description": "Data structure representing the error response to internal server errors",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "description": "The error message describing what happened",
            "type": "string",
            "x-go-name": "Message",
            "example": "Please try again later."
          },
          "statusCode": {
            "description": "The http status code for this error",
            "type": "integer",
            "format": "int64",
            "x-go-name": "StatusCode",
            "example": 500
          }
        }
      }
    },
    "listOfStrings": {
      "description": "Data structure for supported languages information",
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "languages": {
              "description": "The languages supported",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-go-name": "Languages",
              "example": [
                "English",
                "Icelandic"
              ]
            }
          }
        }
      }
    },
    "notFoundResponse": {
      "description": "Data structure representing the error response to a not found error",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "description": "The error message",
            "type": "string",
            "x-go-name": "Message",
            "example": "No quote exists that matches the given parameters."
          }
        }
      }
    },
    "qodHistoryResponse": {
      "description": "Data structure representing the response for the history of QODS",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/QodViewAPIModel"
        }
      }
    },
    "qodResponse": {
      "description": "Data structure representing the response for the quote of the day",
      "schema": {
        "$ref": "#/definitions/QodViewAPIModel"
      }
    },
    "searchViewResponse": {
      "description": "Data structure representing the response for a quote",
      "schema": {
        "$ref": "#/definitions/SearchViewAPIModel"
      }
    },
    "quotesApiResponse": {
      "description": "Data structure representing the response for quotes",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SearchViewAPIModel"
        }
      }
    },
    "successResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "x-go-name": "Message",
            "example": "This request was a success"
          },
          "statusCode": {
            "description": "HTTP status code",
            "type": "integer",
            "format": "int64",
            "x-go-name": "StatusCode",
            "example": 200
          }
        }
      }
    },
    "topicViewResponse": {
      "description": "Data structure representing the response for a quote based on a particular topic",
      "schema": {
        "$ref": "#/definitions/TopicViewAPIModel"
      }
    },
    "topicViewsResponse": {
      "description": "Data structure representing the response for a quote based on a particular topic",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TopicViewAPIModel"
        }
      }
    },
    "topicsResponse": {
      "description": "Data structure representing a list response for topics",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/TopicAPIModel"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Using text search for finding authors and quotes.",
      "name": "SEARCH"
    },
    {
      "description": "Everthing with quotes.",
      "name": "QUOTES"
    },
    {
      "description": "Access all authors. Use this to get/explore authors, get a random author or see the Author of the day.",
      "name": "AUTHORS"
    }
  ]
}